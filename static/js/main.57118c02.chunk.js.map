{"version":3,"sources":["ScrambleText.js","App.js","reportWebVitals.js","index.js","people-and-animals-image.png"],"names":["ScrambleText","_useState","useState","_useState2","_slicedToArray","setInputText","_useState3","_useState4","scrambledText","setScrambledText","React","createElement","type","onChange","event","target","value","str","result","i","length","char","Math","random","toUpperCase","toLowerCase","scrambleCase","onClick","navigator","clipboard","writeText","App","className","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"qNAiBe,SAASA,IAAe,IAAAC,EACHC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA5BI,GAAFF,EAAA,GAAcA,EAAA,IAAAG,EACYJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAYtC,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOC,KAAK,OAAOC,SAZvB,SAA2BC,GACzBT,EAAaS,EAAMC,OAAOC,OAC1BP,EApBJ,SAAsBQ,GAEpB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAK,CACnC,IAAIE,EAAOJ,EAAIE,GAMfD,GAJEG,EADEC,KAAKC,SAAW,GACXF,EAAKG,cAELH,EAAKI,cAIhB,OAAOP,EASYQ,CAAaZ,EAAMC,OAAOC,WAWzCN,IAAAC,cAAA,SAAIH,GACJE,IAAAC,cAAA,UAAQgB,QATZ,WACEC,UAAUC,UAAUC,UAAUtB,KAQM,sBCDzBuB,MA7Bf,WACE,OACErB,IAAAC,cAAA,OAAKqB,UAAU,OACbtB,IAAAC,cAAA,UAAQqB,UAAU,cAChBtB,IAAAC,cAAA,OAAKsB,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCzB,IAAAC,cAAA,UAAI,yBACND,IAAAC,cAACX,EAAY,MACXU,IAAAC,cAAA,SAAG,wDAGHD,IAAAC,cAAA,SAAG,kCAGHD,IAAAC,cAAA,SAAG,cAGHD,IAAAC,cAAA,KACEqB,UAAU,WACVI,KAAK,kDACLrB,OAAO,SACPsB,IAAI,uBACL,yCCdMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAACoB,EAAG,QAORO,uBChBAmB,EAAAC,QAAiBjB,EAAAkB,EAAuB","file":"static/js/main.57118c02.chunk.js","sourcesContent":["// ScrambleText.js \r\nimport React, { useState } from \"react\"; \r\n \r\nfunction scrambleCase(str) { \r\n  let result = \"\"; \r\n  for (let i = 0; i < str.length; i++) { \r\n    let char = str[i]; \r\n    if (Math.random() < 0.5) { \r\n      char = char.toUpperCase(); \r\n    } else { \r\n      char = char.toLowerCase(); \r\n    } \r\n    result += char; \r\n  } \r\n  return result; \r\n} \r\n \r\nexport default function ScrambleText() { \r\n  const [inputText, setInputText] = useState(\"\"); \r\n  const [scrambledText, setScrambledText] = useState(\"\"); \r\n \r\n  function handleInputChange(event) { \r\n    setInputText(event.target.value); \r\n    setScrambledText(scrambleCase(event.target.value)); \r\n  } \r\n\r\n  function handleCopyClick() { \r\n    navigator.clipboard.writeText(scrambledText); \r\n  } \r\n\r\n \r\n  return ( \r\n    <div> \r\n      <input type=\"text\" onChange={handleInputChange} /> \r\n      <p>{scrambledText}</p> \r\n      <button onClick={handleCopyClick}>Copy to clipboard</button> \r\n    </div> \r\n  ); \r\n} ","import logo from './people-and-animals-image.png';\nimport './App.css';\nimport React from \"react\"; \nimport ScrambleText from \"./ScrambleText\"; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>raNDOm cAPs gENeratOr</h1> \n      <ScrambleText />\n        <p>\n          Type your post title in the box above to sCRamBel iT\n        </p>\n        <p>\n          Then click \"Copy to clipboard\"\n        </p>\n        <p>\n          by u/oreiz\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://www.reddit.com/r/PeopleAndAnimalsDying/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Go back to r/PeopleAndAnimalsDying\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/people-and-animals-image.dc6fed34.png\";"],"sourceRoot":""}